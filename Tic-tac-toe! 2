import random

def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * (4 * len(row) - 1))

def check_winner(board, player):
    for i in range(3):
        if all(cell == player for cell in board[i]) or all(board[j][i] == player for j in range(3)):
            return True
    if all(board[i][i] == player for i in range(3)) or all(board[i][2 - i] == player for i in range(3)):
        return True
    return False

def is_full(board):
    return all(cell != " " for row in board for cell in row)

def get_human_move():
    while True:
        try:
            row, col = map(int, input("Enter your move (row and column, e.g., 1 2): ").split())
            if 1 <= row <= 3 and 1 <= col <= 3:
                return row, col
            else:
                print("Invalid move. Row and column must be between 1 and 3.")
        except ValueError:
            print("Invalid input. Please enter two integers.")

def get_computer_move(board):
    empty_cells = [(i, j) for i in range(3) for j in range(3) if board[i][j] == " "]
    return random.choice(empty_cells) if empty_cells else None

def play_game():
    board = [[" " for _ in range(3)] for _ in range(3)]
    current_player = "X"

    print("Let's play Tic-Tac-Toe!")

    while True:
        print_board(board)

        if current_player == "X":
            row, col = get_human_move()
        else:
            print("Computer is making a move...")
            row, col = get_computer_move(board)

        if board[row - 1][col - 1] == " ":
            board[row - 1][col - 1] = current_player
        else:
            print("That spot is already taken. Try again.")
            continue

        if check_winner(board, current_player):
            print_board(board)
            if current_player == "X":
                print("Congratulations! You win!")
            else:
                print("Computer wins! Better luck next time.")
            break

        if is_full(board):
            print_board(board)
            print("It's a tie!")
            break

        current_player = "O" if current_player == "X" else "X"

if __name__ == "__main__":
    play_game()
